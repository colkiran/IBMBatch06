
In python we don't use brackets or parenthesis for a block of code

1. if condition

2. loops

3. functions


if ()

end if

for ()

end for

-------------

if () {

} else {

}


for () {



}

------------------

in python we use indentation

def fun():
   print("hello")
   print("world")


print("hello world")

if i < 10:
   print("hello")
else:
   print("world")

for i in range(1, 10):
    print(i)
    print("hello")
  
Primitive Datatypes 
-------------------
1. Numbers
  a. integers
  b. float
  c. complex

2. Strings
3. Boolean

"     JAN     "

13 - 3 = 10 

0b11 = 1 x 2 ** 1 + 1 x 2 ** 0
     = 1 x 2 + 1 x 1
     = 2 + 1 = 3


Operators
---------
1. Arithmetic Operators
2. Comparison or Relational
3. Logical Operators
4. Bitwise
5. Ternary

Bitwise Operators
-----------------
0 - F and 1 - T
T or T = T
T or F = T
F or T = T
F or F = F

T and T = T
T and F = F
F and T = F
F and F = F

XOR
T xor T = F
F xor T = T
T xor F = T
F xor F = 

OR Operator
-----------
5 | 3

0101
0011
----
0111 - 4 + 2 + 1  = 7
----

AND operator
------------
5 & 3

0101
0111
----
0001   = 1
----

XOR Operator
------------
5 ^ 3

0101
0001
----
0110	= 6	
----

Shift Operators
---------------
Left Shift Operator <<

5 << 1

0101 << 1  => 1010  = 10

8 << 1 => 1000 => 10000 - 16

5 << 2

0101
10100 - 20

10000 >> 1 => 1000 = 8

5 >> 1
0101 >> 1  => 0010 = 2

Loops and Control Structures
----------------------------
1. if conditions

2. for Loops

3. while loop


if condition
------------
x = input("Enter your name :")


for loop
--------
in python for loop is same as foreach loop where we depend on a collection

in python we depend on numbers generated by range function


print
-----
print(data, sep, end="\n")


1. print the pattern

    1 2 3 4 5
     1 2 3 4
      1 2 3
       1 2
        1
       2 1
      3 2 1
     4 3 2 1
    5 4 3 2 1

2. generate prime numbers between 150 and 50 and also print the count of it.


Strings
-------
STRINGS ARE IMMUTABLE



Assignment
----------
1. 1
   2 3
   4 5 6
   7 8 9 10

2.    1 
     1 2
    1 2 3
   1 2 3 4
  1 2 3 4 5
   1 2 3 4
    1 2 3
     1 2
      1

3. write a code to generate fibanocci series











